from PIL import Image
import os
from pathlib import Path


def optimize_images(directory, quality=85, max_width=1920):
    """
    –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

    Args:
        directory: –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        quality: –∫–∞—á–µ—Å—Ç–≤–æ —Å–∂–∞—Ç–∏—è (1-100)
        max_width: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    optimized_dir = Path(directory).parent / f"{Path(directory).name}_optimized"
    optimized_dir.mkdir(exist_ok=True)

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    supported_formats = ('.jpg', '.jpeg', '.png', '.webp')

    # –°—á–µ—Ç—á–∏–∫–∏
    total_size_before = 0
    total_size_after = 0
    processed_count = 0

    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.lower().endswith(supported_formats):
                file_path = Path(root) / file

                # –°–æ–∑–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
                relative_path = file_path.relative_to(directory)
                output_path = optimized_dir / relative_path
                output_path.parent.mkdir(parents=True, exist_ok=True)

                try:
                    # –†–∞–∑–º–µ—Ä –¥–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                    size_before = file_path.stat().st_size
                    total_size_before += size_before

                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    with Image.open(file_path) as img:
                        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
                        if img.mode in ('RGBA', 'LA', 'P'):
                            rgb_img = Image.new('RGB', img.size, (255, 255, 255))
                            rgb_img.paste(img, mask=img.split()[-1] if img.mode == 'RGBA' else None)
                            img = rgb_img

                        # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ
                        if img.width > max_width:
                            ratio = max_width / img.width
                            new_height = int(img.height * ratio)
                            img = img.resize((max_width, new_height), Image.Resampling.LANCZOS)

                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
                        img.save(output_path, 'JPEG', quality=quality, optimize=True)

                    # –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                    size_after = output_path.stat().st_size
                    total_size_after += size_after

                    processed_count += 1
                    reduction = ((size_before - size_after) / size_before) * 100

                    print(f"‚úì {file}: {size_before / 1024:.1f}KB ‚Üí {size_after / 1024:.1f}KB (-{reduction:.1f}%)")

                except Exception as e:
                    print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file}: {e}")

    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    if processed_count > 0:
        total_reduction = ((total_size_before - total_size_after) / total_size_before) * 100
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:")
        print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {processed_count}")
        print(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –¥–æ: {total_size_before / 1024 / 1024:.1f} MB")
        print(f"–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ: {total_size_after / 1024 / 1024:.1f} MB")
        print(f"–°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: {(total_size_before - total_size_after) / 1024 / 1024:.1f} MB (-{total_reduction:.1f}%)")
        print(f"\n–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {optimized_dir}")

        # –ü–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        print("\n‚ö†Ô∏è  –ß—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏:")
        print(f"1. –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–∞–ø–∫–∏ {directory}")
        print(f"2. –£–¥–∞–ª–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ {directory}")
        print(f"3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ {optimized_dir} –≤ {directory}")
    else:
        print("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")


# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == "__main__":
    # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    images_directory = "static/images"

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
    optimize_images(
        directory=images_directory,
        quality=85,  # –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç 1 –¥–æ 100
        max_width=1920  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    )

    # –î–ª—è –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≥–∞–ª–µ—Ä–µ–∏
    gallery_directory = "static/images/gallery"
    optimize_images(
        directory=gallery_directory,
        quality=75,  # –ú–µ–Ω—å—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
        max_width=1200  # –ú–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ø—Ä–µ–≤—å—é
    )